[{"C:\\Users\\Miikka Kirsilä\\Desktop\\Yliopisto\\fullstackopen\\osa2\\puhelinluettelo\\src\\index.js":"1","C:\\Users\\Miikka Kirsilä\\Desktop\\Yliopisto\\fullstackopen\\osa2\\puhelinluettelo\\src\\reportWebVitals.js":"2","C:\\Users\\Miikka Kirsilä\\Desktop\\Yliopisto\\fullstackopen\\osa2\\puhelinluettelo\\src\\App.js":"3","C:\\Users\\Miikka Kirsilä\\Desktop\\Yliopisto\\fullstackopen\\osa2\\puhelinluettelo\\src\\services\\people.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":4787,"mtime":1613208809622,"results":"8","hashOfConfig":"6"},{"size":480,"mtime":1613208978384,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1ecigtq",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"C:\\Users\\Miikka Kirsilä\\Desktop\\Yliopisto\\fullstackopen\\osa2\\puhelinluettelo\\src\\index.js",[],["21","22"],"C:\\Users\\Miikka Kirsilä\\Desktop\\Yliopisto\\fullstackopen\\osa2\\puhelinluettelo\\src\\reportWebVitals.js",[],"C:\\Users\\Miikka Kirsilä\\Desktop\\Yliopisto\\fullstackopen\\osa2\\puhelinluettelo\\src\\App.js",["23","24","25","26","27"],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport peopleService from './services/people'\nimport './App.css'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newSearch, setNewSearch ] = useState('')\n  const [ notification, setNotification ] = useState('')\n  const [ notificationState, setNotificationState ] = useState('notification-disabled')\n\n  useEffect( () => {\n    peopleService.getAll().then( response => {\n        setPersons(response.data)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const personObject = {\n      name: newName,\n      number: newNumber,\n      id: persons.length != 0 ? persons[persons.length - 1].id + 1 : 1\n    }\n\n    if (persons.filter( person => person.name.toLowerCase() === newName.toLowerCase()).length > 0) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with the new one?`)) {\n        // Henkilön tietojen muutos\n        peopleService.update( persons.find( person => person.name.toLowerCase() === newName.toLowerCase() ).id, personObject ).then( () => {\n          peopleService.getAll().then( response => {\n            setPersons(response.data)\n            showNotification(`${newName} changed successfully`, 'notification')\n          })\n        }).catch( error => {\n          showNotification(`${newName} has already been removed from server, updating...`, 'error')\n          peopleService.getAll().then( response => {\n            setPersons(response.data)\n          })\n        })\n        setNewName('')\n        setNewNumber('')\n      }\n    } else {\n      // Henkilön lisäys\n      peopleService.create(personObject).then( () => {\n        setPersons(persons.concat(personObject))\n        showNotification(`${newName} added successfully`, 'notification')\n      }).catch(error => {\n        showNotification(error.response.data.error, 'error')\n      })\n\n      setNewName('')\n      setNewNumber('')\n    }\n  }\n\n  const personsToShow = newSearch.value == 0 \n    ? persons \n    : persons.filter( person => person.name.toLowerCase().includes(newSearch.toLowerCase()) )\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchChange = (event) => {\n    setNewSearch(event.target.value)\n  }\n\n  const showNotification = (message, type) => {\n    setNotification(message)\n    setNotificationState(type == 'notification' ? 'notification-enabled' : 'error-enabled')\n    setTimeout( () => setNotificationState('disabled'), 3000 )\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notificationState={notificationState} message={notification} />\n      <Search newSearch={newSearch} handleSearchChange={handleSearchChange}/>\n      <h2>Add new entry</h2>\n      <PersonForm addPerson={addPerson} newName={newName} newNumber={newNumber} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange}/>\n      <h2>Numbers</h2>\n      <Persons showNotification={showNotification} personsToShow={personsToShow} setPersons={setPersons} />\n    </div>\n  )\n\n}\n\nconst Notification = (props) => {\n  return (\n    <div className={props.notificationState}>{props.message}</div>\n  )\n}\n\nconst Search = (props) => {\n  return (\n    <div>\n      Search: <input value={props.newSearch} onChange={props.handleSearchChange} />\n    </div>\n  )\n}\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.addPerson}>\n      <div>\n        name: <input value={props.newName} onChange={props.handleNameChange} /><br />\n        number: <input value={props.newNumber} onChange={props.handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nconst Persons = (props) => {\n  const removeThis = (id) => {\n    const name = props.personsToShow.filter( (person) => person.id == id)[0].name\n    if (window.confirm(\"Do you really wish to delete \" + name))\n    // Henkilön poisto\n    peopleService.deleteId(id).then( () => {\n      peopleService.getAll().then( response => {\n        props.setPersons(response.data)\n        props.showNotification(`${name} was removed successfully`, 'notification')\n      })\n    }).catch( error => {\n\n    })\n  }\n\n  return (\n    <div>\n      {props.personsToShow.map( person => \n        <Person key={person.id} name={person.name} number={person.number} removeOne={ () => removeThis(person.id) } />\n      )}\n    </div>\n  )\n}\n\nconst Person = (props) => {\n  return (\n    <div>\n      {props.name} {props.number}\n      <button onClick={ props.removeOne }>Remove</button>\n    </div>\n  )\n}\n\nexport default App","C:\\Users\\Miikka Kirsilä\\Desktop\\Yliopisto\\fullstackopen\\osa2\\puhelinluettelo\\src\\services\\people.js",["28"],"import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n// const baseUrl = 'http://localhost:3001/api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObject => {\r\n    return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nconst deleteId = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nexport default { getAll, create, update, deleteId }",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":2,"column":8,"nodeType":"35","messageId":"36","endLine":2,"endColumn":13},{"ruleId":"37","severity":1,"message":"38","line":26,"column":26,"nodeType":"39","messageId":"40","endLine":26,"endColumn":28},{"ruleId":"37","severity":1,"message":"41","line":60,"column":41,"nodeType":"39","messageId":"40","endLine":60,"endColumn":43},{"ruleId":"37","severity":1,"message":"41","line":78,"column":31,"nodeType":"39","messageId":"40","endLine":78,"endColumn":33},{"ruleId":"37","severity":1,"message":"41","line":126,"column":68,"nodeType":"39","messageId":"40","endLine":126,"endColumn":70},{"ruleId":"42","severity":1,"message":"43","line":21,"column":1,"nodeType":"44","endLine":21,"endColumn":52},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]