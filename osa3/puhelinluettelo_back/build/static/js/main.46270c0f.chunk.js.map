{"version":3,"sources":["services/people.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","put","delete","Notification","props","className","notificationState","message","Search","value","newSearch","onChange","handleSearchChange","PersonForm","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","Persons","personsToShow","map","person","name","number","removeOne","filter","window","confirm","peopleService","then","response","setPersons","data","showNotification","catch","error","removeThis","Person","onClick","App","useState","persons","setNewName","setNewNumber","setNewSearch","notification","setNotification","setNotificationState","useEffect","toLowerCase","includes","setTimeout","event","target","preventDefault","personObject","length","find","concat","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46270c0f.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObject => {\r\n    return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nconst deleteId = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nexport default { getAll, create, update, deleteId }","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport peopleService from './services/people'\nimport './App.css'\nimport people from './services/people'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newSearch, setNewSearch ] = useState('')\n  const [ notification, setNotification ] = useState('')\n  const [ notificationState, setNotificationState ] = useState('notification-disabled')\n\n  useEffect( () => {\n    peopleService.getAll().then( response => {\n        setPersons(response.data)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const personObject = {\n      name: newName,\n      number: newNumber,\n      id: persons.length != 0 ? persons[persons.length - 1].id + 1 : 1\n    }\n\n    if (persons.filter( person => person.name.toLowerCase() === newName.toLowerCase()).length > 0) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with the new one?`)) {\n        // Henkilön tietojen muutos\n        peopleService.update( persons.find( person => person.name.toLowerCase() === newName.toLowerCase() ).id, personObject ).then( () => {\n          peopleService.getAll().then( response => {\n            setPersons(response.data)\n            showNotification(`${newName} changed successfully`, 'notification')\n          })\n        }).catch( error => {\n          showNotification(`${newName} has already been removed from server, updating...`, 'error')\n          peopleService.getAll().then( response => {\n            setPersons(response.data)\n          })\n        })\n        setNewName('')\n        setNewNumber('')\n      }\n    } else {\n      // Henkilön lisäys\n      peopleService.create(personObject).then( () => {\n        setPersons(persons.concat(personObject))\n        showNotification(`${newName} added successfully`, 'notification')\n      })\n\n      setNewName('')\n      setNewNumber('')\n    }\n  }\n\n  const personsToShow = newSearch.value == 0 \n    ? persons \n    : persons.filter( person => person.name.toLowerCase().includes(newSearch.toLowerCase()) )\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchChange = (event) => {\n    setNewSearch(event.target.value)\n  }\n\n  const showNotification = (message, type) => {\n    setNotification(message)\n    setNotificationState(type == 'notification' ? 'notification-enabled' : 'error-enabled')\n    setTimeout( () => setNotificationState('disabled'), 3000 )\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notificationState={notificationState} message={notification} />\n      <Search newSearch={newSearch} handleSearchChange={handleSearchChange}/>\n      <h2>Add new entry</h2>\n      <PersonForm addPerson={addPerson} newName={newName} newNumber={newNumber} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange}/>\n      <h2>Numbers</h2>\n      <Persons showNotification={showNotification} personsToShow={personsToShow} setPersons={setPersons} />\n    </div>\n  )\n\n}\n\nconst Notification = (props) => {\n  return (\n    <div className={props.notificationState}>{props.message}</div>\n  )\n}\n\nconst Search = (props) => {\n  return (\n    <div>\n      Search: <input value={props.newSearch} onChange={props.handleSearchChange} />\n    </div>\n  )\n}\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.addPerson}>\n      <div>\n        name: <input value={props.newName} onChange={props.handleNameChange} /><br />\n        number: <input value={props.newNumber} onChange={props.handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nconst Persons = (props) => {\n  const removeThis = (id) => {\n    const name = props.personsToShow.filter( (person) => person.id == id)[0].name\n    if (window.confirm(\"Do you really wish to delete \" + name))\n    // Henkilön poisto\n    peopleService.deleteId(id).then( () => {\n      peopleService.getAll().then( response => {\n        props.setPersons(response.data)\n        props.showNotification(`${name} was removed successfully`, 'notification')\n      })\n    }).catch( error => {\n\n    })\n  }\n\n  return (\n    <div>\n      {props.personsToShow.map( person => \n        <Person key={person.id} name={person.name} number={person.number} removeOne={ () => removeThis(person.id) } />\n      )}\n    </div>\n  )\n}\n\nconst Person = (props) => {\n  return (\n    <div>\n      {props.name} {props.number}\n      <button onClick={ props.removeOne }>Remove</button>\n    </div>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}